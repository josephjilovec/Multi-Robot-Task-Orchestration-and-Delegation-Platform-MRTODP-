# .env.example for the Multi-Robot Task Orchestration and Delegation Platform (MRTODP)
# Purpose: Provides a template for environment variables used in MRTODP to configure
# CUDA for GPU-accelerated AI, quantum backend access, ROS communication, marketplace
# authentication, and network ports. Each variable is essential for orchestrating tasks
# across heterogeneous robots and enabling the interoperable skills marketplace.

# CUDA_HOME: Path to the CUDA toolkit installation (e.g., /usr/local/cuda-12.2).
# Used by backend/cuda/kernels/ and backend/julia/cuda/ for GPU-accelerated neural
# network computations in the AI-driven task delegation engine.
CUDA_HOME=/path/to/cuda

# QUANTUM_API_KEY: API key for accessing quantum hardware backends (e.g., IBM Quantum, AWS Braket).
# Used by backend/julia/quantum/ for executing quantum-enhanced skills in the skills marketplace.
# Leave empty to use Yao.jl simulator mode.
QUANTUM_API_KEY=your_quantum_api_key

# ROS_MASTER_URI: URI of the ROS master node (e.g., http://localhost:11311).
# Used by backend/python/ros_bridge/ to communicate with heterogeneous robots via ROS.
# Ensures task delegation to robots running ROS-compatible software.
ROS_MASTER_URI=http://localhost:11311

# MARKETPLACE_API_KEY: API key for authenticating with the skills marketplace.
# Used by backend/scala/marketplace/ and backend/elixir/marketplace/ to enable secure
# skill sharing and discovery across robot manufacturers.
MARKETPLACE_API_KEY=your_marketplace_api_key

# PORT: Port for internal communication between components (e.g., Lisp planner and Julia server).
# Used by backend/lisp/planner.lisp and backend/julia/main.jl for task orchestration
# and result exchange. Default is 5000.
PORT=5000
